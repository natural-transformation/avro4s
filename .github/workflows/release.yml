name: release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        default: '5.1.'
        required: true
      branch:
        description: "The branch to release from"
        required: true
        default: 'master'
  release:
    types: [published]

jobs:
  scala-3:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository for workflow_dispatch
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}

      - name: Check out repository for release
        if: github.event_name == 'release'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Determine release version
        id: set_version
        run: |
          # If triggered by workflow_dispatch, use the input 'version';
          # otherwise, derive version from the GitHub release tag, stripping any leading "v".
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            # Remove leading 'v' from tag, e.g., 'v5.1.2' becomes '5.1.2'
            TAG="${{ github.event.release.tag_name }}"
            TAG="${TAG#v}"
            echo "version=$TAG" >> $GITHUB_OUTPUT
          fi

      - name: Install Nix (with flake support)
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: sandbox = true

      - name: Configure Cachix
        uses: cachix/cachix-action@v10
        with:
          name: avro4s
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          push: true

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PGP_PASSPHRASE }}

      # Optional: Remove if confident in GPG import
      - name: Show GPG user IDs
        run: |
          echo "fingerprint: ${{ steps.import_gpg.outputs.fingerprint }}"
          echo "keyid:       ${{ steps.import_gpg.outputs.keyid }}"
          echo "name:        ${{ steps.import_gpg.outputs.name }}"
          echo "email:       ${{ steps.import_gpg.outputs.email }}"

      - name: Publish Signed Artifacts
        env:
          RELEASE_VERSION: ${{ steps.set_version.outputs.version }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: nix develop --command sbt publishSigned

      - name: Sonatype Bundle Release
        env:
          RELEASE_VERSION: ${{ steps.set_version.outputs.version }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: nix develop --command sbt sonatypeBundleRelease
